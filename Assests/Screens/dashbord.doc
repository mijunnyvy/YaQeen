"use client"

import { useState, useEffect } from "react"
import { motion, useScroll, useTransform } from "framer-motion"
import { Button } from "@/components/ui/button"
import { Card } from "@/components/ui/card"
import { Input } from "@/components/ui/input"
import {
  Menu,
  BookOpen,
  Compass,
  MessageCircle,
  Sun,
  Moon,
  Sparkles,
  Heart,
  MapPin,
  Clock,
  Calendar,
  Search,
  Globe,
  ChevronRight,
  ChurchIcon as Mosque,
  Users,
  Award,
} from "lucide-react"
import { DailyWisdom } from "@/components/daily-wisdom"
import { NavigationDrawer } from "@/components/navigation-drawer"
import { useLanguage } from "@/contexts/language-context"

interface PrayerTime {
  name: string
  time: string
  startTime: string
  passed: boolean
}

export default function DashboardPage() {
  const [isDrawerOpen, setIsDrawerOpen] = useState(false)
  const [isDark, setIsDark] = useState(false)
  const [currentTime, setCurrentTime] = useState(new Date())
  const { language, setLanguage } = useLanguage()
  const { scrollY } = useScroll()
  const headerOpacity = useTransform(scrollY, [0, 100], [1, 0.9])
  const heroY = useTransform(scrollY, [0, 300], [0, -50])

  // Mock prayer times
  const prayerTimes: PrayerTime[] = [
    { name: "Fajr", time: "5:30 AM", startTime: "5:30 AM", passed: true },
    { name: "Dhuhr", time: "12:45 PM", startTime: "12:45 PM", passed: true },
    { name: "Asr", time: "3:30 PM", startTime: "3:30 PM", passed: false },
    { name: "Maghrib", time: "6:15 PM", startTime: "6:15 PM", passed: false },
    { name: "Isha", time: "7:45 PM", startTime: "7:45 PM", passed: false },
  ]

  useEffect(() => {
    const timer = setInterval(() => {
      setCurrentTime(new Date())
    }, 1000)
    return () => clearInterval(timer)
  }, [])

  const toggleTheme = () => {
    setIsDark(!isDark)
    document.documentElement.classList.toggle("dark")
  }

  const features = [
    {
      icon: Compass,
      title: language === "ar" ? "القبلة" : "Qibla Finder",
      description: language === "ar" ? "اعثر على اتجاه القبلة بدقة" : "Find accurate Qibla direction",
      href: "/qibla",
      color: "from-emerald-500 to-teal-500",
      category: "prayer",
    },
    {
      icon: BookOpen,
      title: language === "ar" ? "القرآن الكريم" : "Holy Quran",
      description: language === "ar" ? "اقرأ واستمع للقرآن الكريم" : "Read and listen to the Quran",
      href: "/quran",
      color: "from-blue-500 to-indigo-500",
      category: "quran",
    },
    {
      icon: Clock,
      title: language === "ar" ? "أوقات الصلاة" : "Prayer Times",
      description: language === "ar" ? "أوقات الصلاة الدقيقة" : "Accurate prayer times",
      href: "/prayer-times",
      color: "from-amber-500 to-orange-500",
      category: "prayer",
    },
    {
      icon: Heart,
      title: language === "ar" ? "التسبيح" : "Digital Tasbih",
      description: language === "ar" ? "سبحة رقمية تفاعلية" : "Interactive digital prayer beads",
      href: "/tasbih",
      color: "from-rose-500 to-pink-500",
      category: "dhikr",
    },
    {
      icon: Sparkles,
      title: language === "ar" ? "الأذكار" : "Daily Adkar",
      description: language === "ar" ? "أذكار الصباح والمساء" : "Morning and evening remembrance",
      href: "/adkar",
      color: "from-purple-500 to-violet-500",
      category: "dhikr",
    },
    {
      icon: MessageCircle,
      title: language === "ar" ? "المساعد الذكي" : "AI Assistant",
      description: language === "ar" ? "مساعد ذكي للأسئلة الإسلامية" : "Islamic guidance AI assistant",
      href: "/chat",
      color: "from-cyan-500 to-blue-500",
      category: "learning",
    },
    {
      icon: MapPin,
      title: language === "ar" ? "مكتشف المساجد" : "Mosque Finder",
      description: language === "ar" ? "اعثر على المساجد القريبة" : "Find nearby mosques",
      href: "/mosque-finder",
      color: "from-green-600 to-emerald-600",
      category: "community",
    },
    {
      icon: Calendar,
      title: language === "ar" ? "التقويم الهجري" : "Islamic Calendar",
      description: language === "ar" ? "التقويم الهجري والمناسبات" : "Hijri calendar and events",
      href: "/islamic-calendar",
      color: "from-indigo-500 to-purple-500",
      category: "tools",
    },
  ]

  const stats = [
    { icon: Users, value: "1M+", label: language === "ar" ? "مستخدم" : "Users" },
    { icon: Mosque, value: "50K+", label: language === "ar" ? "مسجد" : "Mosques" },
    { icon: Award, value: "4.9", label: language === "ar" ? "تقييم" : "Rating" },
  ]

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-50 via-blue-50 to-emerald-50 dark:from-slate-900 dark:via-blue-900 dark:to-emerald-900">
      {/* Sticky Navigation */}
      <motion.header
        style={{ opacity: headerOpacity }}
        className="sticky top-0 z-50 glass-effect border-b border-white/20"
      >
        <div className="container mx-auto px-4 py-4">
          <div className="flex items-center justify-between">
            <div className="flex items-center space-x-4">
              <Button variant="ghost" size="icon" onClick={() => setIsDrawerOpen(true)}>
                <Menu className="w-5 h-5" />
              </Button>
              <motion.div
                initial={{ opacity: 0, x: -20 }}
                animate={{ opacity: 1, x: 0 }}
                className="flex items-center space-x-2"
              >
                <div className="w-8 h-8 bg-gradient-to-r from-emerald-500 to-blue-500 rounded-lg flex items-center justify-center">
                  <Mosque className="w-5 h-5 text-white" />
                </div>
                <span className="text-xl font-bold bg-gradient-to-r from-emerald-600 to-blue-600 bg-clip-text text-transparent">
                  YaQeen
                </span>
              </motion.div>
            </div>

            <div className="hidden md:flex items-center space-x-4 flex-1 max-w-md mx-8">
              <div className="relative flex-1">
                <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-muted-foreground" />
                <Input
                  placeholder={language === "ar" ? "ابحث..." : "Search..."}
                  className="pl-10 glass-effect border-white/20"
                />
              </div>
            </div>

            <div className="flex items-center space-x-2">
              <Button
                variant="ghost"
                size="sm"
                onClick={() => setLanguage(language === "en" ? "ar" : "en")}
                className="glass-effect"
              >
                <Globe className="w-4 h-4 mr-1" />
                {language === "ar" ? "EN" : "عربي"}
              </Button>
              <Button variant="ghost" size="icon" onClick={toggleTheme}>
                {isDark ? <Sun className="w-5 h-5" /> : <Moon className="w-5 h-5" />}
              </Button>
            </div>
          </div>
        </div>
      </motion.header>

      {/* Hero Section */}
      <motion.section style={{ y: heroY }} className="relative overflow-hidden py-20 md:py-32 islamic-pattern">
        <div className="absolute inset-0 hero-gradient opacity-90" />
        <div className="absolute inset-0 bg-black/20" />

        <div className="container mx-auto px-4 relative z-10">
          <motion.div
            initial={{ opacity: 0, y: 30 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8 }}
            className="text-center text-white"
          >
            <motion.h1
              className="text-4xl md:text-6xl lg:text-7xl font-bold mb-6 leading-tight"
              style={{ fontFamily: language === "ar" ? "var(--font-cairo)" : "var(--font-lexend-deca)" }}
            >
              {language === "ar" ? (
                <>
                  <span className="block">رفيقك الإسلامي</span>
                  <span className="block bg-gradient-to-r from-yellow-300 to-orange-300 bg-clip-text text-transparent">
                    الشامل
                  </span>
                </>
              ) : (
                <>
                  <span className="block">Your Complete</span>
                  <span className="block bg-gradient-to-r from-yellow-300 to-orange-300 bg-clip-text text-transparent">
                    Islamic Companion
                  </span>
                </>
              )}
            </motion.h1>

            <motion.p
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ delay: 0.3, duration: 0.8 }}
              className="text-xl md:text-2xl mb-8 text-white/90 max-w-3xl mx-auto leading-relaxed"
            >
              {language === "ar"
                ? "اكتشف الإسلام بطريقة حديثة مع أدوات شاملة للعبادة والتعلم والمجتمع"
                : "Discover Islam in a modern way with comprehensive tools for worship, learning, and community"}
            </motion.p>

            <motion.div
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ delay: 0.6, duration: 0.8 }}
              className="flex flex-col sm:flex-row gap-4 justify-center items-center"
            >
              <Button
                size="lg"
                className="bg-gradient-to-r from-emerald-500 to-blue-500 hover:from-emerald-600 hover:to-blue-600 text-white px-8 py-3 text-lg font-semibold shadow-xl"
                onClick={() => window.scrollTo({ top: window.innerHeight, behavior: "smooth" })}
              >
                {language === "ar" ? "ابدأ الآن" : "Get Started"}
                <ChevronRight className="w-5 h-5 ml-2" />
              </Button>
              <Button
                variant="outline"
                size="lg"
                className="glass-effect border-white/30 text-white hover:bg-white/10 px-8 py-3 text-lg bg-transparent"
                onClick={() => window.scrollTo({ top: window.innerHeight * 1.5, behavior: "smooth" })}
              >
                {language === "ar" ? "استكشف الميزات" : "Explore Features"}
              </Button>
            </motion.div>
          </motion.div>

          {/* Floating Animation Elements */}
          <motion.div
            animate={{
              rotate: 360,
              scale: [1, 1.1, 1],
            }}
            transition={{
              rotate: { duration: 20, repeat: Number.POSITIVE_INFINITY, ease: "linear" },
              scale: { duration: 4, repeat: Number.POSITIVE_INFINITY, ease: "easeInOut" },
            }}
            className="absolute top-20 right-10 w-20 h-20 bg-gradient-to-r from-yellow-400 to-orange-400 rounded-full opacity-20 blur-xl"
          />
          <motion.div
            animate={{
              rotate: -360,
              scale: [1, 1.2, 1],
            }}
            transition={{
              rotate: { duration: 25, repeat: Number.POSITIVE_INFINITY, ease: "linear" },
              scale: { duration: 6, repeat: Number.POSITIVE_INFINITY, ease: "easeInOut" },
            }}
            className="absolute bottom-20 left-10 w-32 h-32 bg-gradient-to-r from-emerald-400 to-teal-400 rounded-full opacity-15 blur-2xl"
          />
        </div>
      </motion.section>

      {/* Stats Section */}
      <section className="py-16 bg-white/50 dark:bg-slate-800/50 backdrop-blur-sm">
        <div className="container mx-auto px-4">
          <div className="grid grid-cols-3 gap-8">
            {stats.map((stat, index) => (
              <motion.div
                key={stat.label}
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ delay: index * 0.1 }}
                className="text-center"
              >
                <div className="w-12 h-12 bg-gradient-to-r from-emerald-500 to-blue-500 rounded-full flex items-center justify-center mx-auto mb-4">
                  <stat.icon className="w-6 h-6 text-white" />
                </div>
                <div className="text-2xl md:text-3xl font-bold text-foreground mb-1">{stat.value}</div>
                <div className="text-muted-foreground">{stat.label}</div>
              </motion.div>
            ))}
          </div>
        </div>
      </section>

      {/* Features Section */}
      <section className="py-20 relative">
        <div className="container mx-auto px-4">
          <motion.div initial={{ opacity: 0, y: 30 }} whileInView={{ opacity: 1, y: 0 }} className="text-center mb-16">
            <h2 className="text-3xl md:text-4xl font-bold mb-4 bg-gradient-to-r from-emerald-600 to-blue-600 bg-clip-text text-transparent">
              {language === "ar" ? "الميزات الرئيسية" : "Essential Features"}
            </h2>
            <p className="text-lg text-muted-foreground max-w-2xl mx-auto">
              {language === "ar"
                ? "أدوات شاملة لتعزيز رحلتك الروحية وتقوية إيمانك"
                : "Comprehensive tools to enhance your spiritual journey and strengthen your faith"}
            </p>
          </motion.div>

          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
            {features.map((feature, index) => (
              <motion.div
                key={feature.title}
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ delay: index * 0.1 }}
                whileHover={{ y: -5 }}
                className="group cursor-pointer"
                onClick={() => (window.location.href = feature.href)}
              >
                <Card className="feature-card p-6 h-full border-0 shadow-lg hover:shadow-xl transition-all duration-300">
                  <div className="flex flex-col items-center text-center space-y-4">
                    <div
                      className={`w-16 h-16 rounded-2xl bg-gradient-to-r ${feature.color} flex items-center justify-center shadow-lg group-hover:scale-110 transition-transform duration-300`}
                    >
                      <feature.icon className="w-8 h-8 text-white" />
                    </div>
                    <div>
                      <h3 className="text-lg font-semibold mb-2 text-foreground group-hover:text-primary transition-colors">
                        {feature.title}
                      </h3>
                      <p className="text-sm text-muted-foreground leading-relaxed">{feature.description}</p>
                    </div>
                  </div>
                </Card>
              </motion.div>
            ))}
          </div>
        </div>
      </section>

      {/* Current Prayer Times */}
      <section className="py-16 bg-gradient-to-r from-emerald-50 to-blue-50 dark:from-emerald-900/20 dark:to-blue-900/20">
        <div className="container mx-auto px-4">
          <motion.div initial={{ opacity: 0, y: 20 }} whileInView={{ opacity: 1, y: 0 }} className="text-center mb-12">
            <h2 className="text-2xl md:text-3xl font-bold mb-4">
              {language === "ar" ? "أوقات الصلاة اليوم" : "Today's Prayer Times"}
            </h2>
            <div className="flex items-center justify-center text-muted-foreground">
              <MapPin className="w-4 h-4 mr-1" />
              <span>New York, NY</span>
            </div>
          </motion.div>

          <div className="grid grid-cols-2 md:grid-cols-5 gap-4 max-w-4xl mx-auto">
            {prayerTimes.map((prayer, index) => (
              <motion.div
                key={prayer.name}
                initial={{ opacity: 0, scale: 0.9 }}
                whileInView={{ opacity: 1, scale: 1 }}
                transition={{ delay: index * 0.1 }}
                className={`glass-effect p-4 rounded-xl text-center ${
                  !prayer.passed ? "ring-2 ring-primary/50 bg-primary/10" : ""
                }`}
              >
                <div className="text-sm font-medium text-foreground mb-1">
                  {language === "ar"
                    ? { Fajr: "الفجر", Dhuhr: "الظهر", Asr: "العصر", Maghrib: "المغرب", Isha: "العشاء" }[prayer.name] ||
                      prayer.name
                    : prayer.name}
                </div>
                <div className="text-lg font-bold text-primary">{prayer.time}</div>
                {!prayer.passed && (
                  <div className="text-xs text-primary mt-1">{language === "ar" ? "القادمة" : "Next"}</div>
                )}
              </motion.div>
            ))}
          </div>
        </div>
      </section>

      {/* Daily Wisdom */}
      <section className="py-16">
        <div className="container mx-auto px-4">
          <motion.div initial={{ opacity: 0, y: 20 }} whileInView={{ opacity: 1, y: 0 }}>
            <DailyWisdom />
          </motion.div>
        </div>
      </section>

      {/* Footer */}
      <footer className="bg-slate-900 text-white py-16">
        <div className="container mx-auto px-4">
          <div className="grid grid-cols-1 md:grid-cols-4 gap-8">
            <div className="col-span-1 md:col-span-2">
              <div className="flex items-center space-x-2 mb-4">
                <div className="w-8 h-8 bg-gradient-to-r from-emerald-500 to-blue-500 rounded-lg flex items-center justify-center">
                  <Mosque className="w-5 h-5 text-white" />
                </div>
                <span className="text-xl font-bold">YaQeen</span>
              </div>
              <p className="text-slate-300 mb-4 max-w-md">
                {language === "ar"
                  ? "رفيقك الإسلامي الشامل لحياة روحية أفضل"
                  : "Your complete Islamic companion for a better spiritual life"}
              </p>
              <div className="flex space-x-4">
                <Button variant="ghost" size="sm" className="text-slate-300 hover:text-white">
                  {language === "ar" ? "سياسة الخصوصية" : "Privacy Policy"}
                </Button>
                <Button variant="ghost" size="sm" className="text-slate-300 hover:text-white">
                  {language === "ar" ? "الشروط" : "Terms"}
                </Button>
              </div>
            </div>

            <div>
              <h3 className="font-semibold mb-4">{language === "ar" ? "روابط سريعة" : "Quick Links"}</h3>
              <div className="space-y-2">
                {["Quran", "Prayer Times", "Qibla", "Tasbih"].map((link) => (
                  <Button
                    key={link}
                    variant="ghost"
                    size="sm"
                    className="text-slate-300 hover:text-white p-0 h-auto justify-start"
                  >
                    {link}
                  </Button>
                ))}
              </div>
            </div>

            <div>
              <h3 className="font-semibold mb-4">{language === "ar" ? "أوقات الصلاة" : "Prayer Times"}</h3>
              <div className="space-y-2 text-sm text-slate-300">
                {prayerTimes.slice(0, 3).map((prayer) => (
                  <div key={prayer.name} className="flex justify-between">
                    <span>{prayer.name}</span>
                    <span>{prayer.time}</span>
                  </div>
                ))}
              </div>
            </div>
          </div>

          <div className="border-t border-slate-700 mt-12 pt-8 text-center text-slate-400">
            <p>&copy; 2024 YaQeen. {language === "ar" ? "جميع الحقوق محفوظة" : "All rights reserved"}.</p>
          </div>
        </div>
      </footer>

      {/* Navigation Drawer */}
      <NavigationDrawer
        isOpen={isDrawerOpen}
        onClose={() => setIsDrawerOpen(false)}
        isDark={isDark}
        onToggleTheme={toggleTheme}
      />
    </div>
  )
}
